
apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.ydzncd.androidtest"
        minSdkVersion 18
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
        }
    }
    //配置自定义打包名称
    applicationVariants.all { variant ->
        if (variant.buildType.name.equals('release')) {
            variant.getPackageApplication().outputDirectory = new File("//192.168.31.65/share/app_k6/android");
        }
        else {
   //         variant.getPackageApplication().outputDirectory = new File("//192.168.31.65/share/app_k6/android");
        }
        println 'variant name: ' + variant.name + ' description: ' + variant.description;
        variant.outputs.all { output ->
            def fileName
            def date = new Date()
            def formattedDate = date.format('yyyyMMdd')
            if (variant.buildType.name.equals('release')) {
                fileName = "YueFit_${variant.mergedFlavor.versionName}_debug_${formattedDate}.apk"
            } else if (variant.buildType.name.equals('debug')) {
                fileName = "${variant.mergedFlavor.versionName}_release_${formattedDate}.apk"
            }
 //           outputFileName = fileName;
            output.outputFileName = fileName;
 //           output.outputDir = new File("E:\\360Downloads")
        }
    }
}

greendao {
    schemaVersion 1000
}

task hello << {
    println 'Hello world!'
}

task configClosure << {
    person {
        personName = "zhang san"
        personAge = 20
        dumpPerson()
    }
}
class Person{
    String personName
    int personAge

    def dumpPerson(){
        println "name is ${personName}, age is ${personAge}"
    }
}

def person(Closure<Person> closure){
    Person p = new Person();
    closure.delegate = p;
    closure.setResolveStrategy(Closure.DELEGATE_FIRST)
    closure(p)
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.1.1'
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:27.1.1'
    testImplementation 'junit:junit:4.12'
    //noinspection GradleCompatible
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'

    implementation 'io.reactivex.rxjava2:rxjava:2.1.1'

    compile "com.polidea.rxandroidble2:rxandroidble:1.6.0"

    compile 'com.google.android.gms:play-services-fitness:11.6.0'
    compile 'com.google.android.gms:play-services-auth:11.6.0'

    implementation 'org.greenrobot:greendao:3.2.2' // add library
    implementation 'net.zetetic:android-database-sqlcipher:3.5.6'

}
